name: Liquibase Status with Spanner

on:
  workflow_dispatch:
    inputs:
      app_env:
        description: 'Environment (dev, stage, prod-c)'
        default: 'dev'
        required: true
      spanner_instance:
        description: 'Spanner instance (e.g., demo)'
        default: 'demo'
        required: true

env:
  CHANGE_LOG_FILE: sql/changelog-root.xml
  JDBC_URL: jdbc:cloudspanner:/projects/${{ vars.GCP_PROJECT_ID }}/instances/${{ inputs.spanner_instance }}/databases/demo_liquibase
  SEARCH_PATH: /github/workspace,/github/workspace/sql
  WORKSPACE: ${{ github.workspace }}

jobs:
  test-liquibase-status:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: GCP Authentication
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          export_environment_variables: true
          create_credentials_file: true

      - name: Copy Credentials to Workspace
        run: |
          cp "$GOOGLE_APPLICATION_CREDENTIALS" "${{ env.WORKSPACE }}/gcp-creds.json"
        shell: bash

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Maven
        run: sudo apt-get update && sudo apt-get install -y maven

      - name: Download JDBC Driver
        run: |
          mkdir -p "${{ env.WORKSPACE }}/lib"
          cd "${{ env.WORKSPACE }}/lib"
          rm -f spanner-jdbc-driver.jar
          cat <<EOF > pom.xml
          <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
            <modelVersion>4.0.0</modelVersion>
            <groupId>com.example</groupId>
            <artifactId>temp</artifactId>
            <version>1.0-SNAPSHOT</version>
            <dependencies>
              <dependency>
                <groupId>com.google.cloud</groupId>
                <artifactId>google-cloud-spanner-jdbc</artifactId>
                <version>2.30.1</version>
              </dependency>
            </dependencies>
            <repositories>
              <repository>
                <id>central</id>
                <url>https://repo.maven.apache.org/maven2</url>
              </repository>
            </repositories>
          </project>
          EOF
          echo "<settings></settings>" > /tmp/settings.xml
          mvn dependency:copy-dependencies -s /tmp/settings.xml
          ls -l "${{ env.WORKSPACE }}/lib"
          ls -l "${{ env.WORKSPACE }}/lib/target/dependency"
          if [ -f "${{ env.WORKSPACE }}/lib/target/dependency/google-cloud-spanner-jdbc-2.30.1.jar" ]; then
            echo "Spanner JDBC driver found"
            unzip -l "${{ env.WORKSPACE }}/lib/target/dependency/google-cloud-spanner-jdbc-2.30.1.jar" | grep com/google/cloud/spanner/jdbc/JdbcDriver || echo "ERROR: Driver class not found in JAR"
          else
            echo "ERROR: Spanner JDBC driver not found"
            exit 1
          fi
        shell: bash

      - name: Configure Liquibase Properties
        run: |
          echo "liquibase.defaultSchemaName=" > "${{ env.WORKSPACE }}/liquibase.properties"
          echo "liquibase.classpath=$(find ${{ github.workspace }}/lib/target/dependency -name '*.jar' | tr '\n' ':')" >> "${{ env.WORKSPACE }}/liquibase.properties"
          cat "${{ env.WORKSPACE }}/liquibase.properties"
        shell: bash

      - name: Run Liquibase Status
        id: liquibase_status
        uses: liquibase-github-actions/status@v4.32.0
        with:
          changelogFile: ${{ env.CHANGE_LOG_FILE }}
          url: "${{ env.JDBC_URL }}"
          driver: com.google.cloud.spanner.jdbc.JdbcDriver
          searchPath: "${{ env.SEARCH_PATH }}"
          classpath: "$(find ${{ github.workspace }}/lib/target/dependency -name '*.jar' | tr '\n' ':')"
          contextFilter: ${{ inputs.app_env }}
          logLevel: debug
          outputFile: liquibase-status.log
        env:
          JAVA_HOME: ""
          GOOGLE_APPLICATION_CREDENTIALS: "${{ github.workspace }}/gcp-creds.json"

      - name: Output Results
        if: always()
        run: |
          if [ -f liquibase-status.log ]; then
            echo "Liquibase Status Log:"
            cat liquibase-status.log
          else
            echo "No liquibase-status.log found"
          fi
        shell: bash