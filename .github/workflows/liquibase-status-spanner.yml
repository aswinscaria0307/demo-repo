name: Liquibase Status with Spanner

on:
  workflow_dispatch:
    inputs:
      app_env:
        description: 'Environment (dev, stage, prod-c)'
        default: 'dev'
        required: true
      spanner_instance:
        description: 'Spanner instance (e.g., demo)'
        default: 'demo'
        required: true

env:
  CHANGE_LOG_FILE: sql/changelog-root.xml
  JDBC_URL: jdbc:cloudspanner:/projects/${{ vars.GCP_PROJECT_ID }}/instances/${{ inputs.spanner_instance }}/databases/demo_liquibase?credentials=/github/workspace/gha-creds.json
  SEARCH_PATH: sql
  WORKSPACE: ${{ github.workspace }}

jobs:
  test-liquibase-status:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: GCP Authentication
        id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          export_environment_variables: true
          create_credentials_file: true

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install Maven and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y maven jq

      - name: Verify JAVA_HOME
        run: |
          echo "JAVA_HOME is set to: $JAVA_HOME"
          ls -l "$JAVA_HOME"
          RESOLVED_JAVA_HOME=$(readlink -f "$JAVA_HOME")
          echo "Resolved JAVA_HOME: $RESOLVED_JAVA_HOME"
        shell: bash

      - name: Save Service Account Key
        run: |
          echo "${{ secrets.GCP_SA_KEY }}" | tr -d '\r' | jq . > "${{ env.WORKSPACE }}/gha-creds.json"
        shell: bash

      - name: Download JDBC driver
        run: |
          mkdir -p "${{ env.WORKSPACE }}/lib"
          cd "${{ env.WORKSPACE }}/lib"
          rm -f spanner-jdbc-driver.jar
          cat <<EOF > pom.xml
          <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
            <modelVersion>4.0.0</modelVersion>
            <groupId>com.example</groupId>
            <artifactId>temp</artifactId>
            <version>1.0-SNAPSHOT</version>
            <dependencies>
              <dependency>
                <groupId>com.google.cloud</groupId>
                <artifactId>google-cloud-spanner-jdbc</artifactId>
                <version>2.30.1</version>
              </dependency>
            </dependencies>
            <repositories>
              <repository>
                <id>central</id>
                <url>https://repo.maven.apache.org/maven2</url>
              </repository>
            </repositories>
          </project>
          EOF
          echo "<settings></settings>" > /tmp/settings.xml
          mvn dependency:copy-dependencies -s /tmp/settings.xml
          ls -l "${{ env.WORKSPACE }}/lib"
          ls -l "${{ env.WORKSPACE }}/lib/target/dependency"
          if [ -f "${{ env.WORKSPACE }}/lib/target/dependency/google-cloud-spanner-jdbc-2.30.1.jar" ]; then
            echo "Spanner JDBC driver found"
            unzip -l "${{ env.WORKSPACE }}/lib/target/dependency/google-cloud-spanner-jdbc-2.30.1.jar" | grep com/google/cloud/spanner/jdbc/JdbcDriver || echo "ERROR: Driver class not found in JAR"
          else
            echo "ERROR: Spanner JDBC driver not found"
            exit 1
          fi
        shell: bash

      - name: Debug Classpath
        run: |
          echo "Listing contents of ${{ github.workspace }}/lib in host:"
          ls -l "${{ github.workspace }}/lib"
          echo "Listing contents of ${{ github.workspace }}/lib/target/dependency in host:"
          ls -l "${{ github.workspace }}/lib/target/dependency"
          docker run --rm \
            -v "${{ github.workspace }}:/github/workspace" \
            --workdir /github/workspace \
            liquibase/liquibase:4.32.0 \
            bash -c "echo 'Listing contents of /github/workspace/lib in container:' && ls -l /github/workspace/lib; echo 'Listing contents of /github/workspace/lib/target/dependency in container:' && ls -l /github/workspace/lib/target/dependency; echo 'Working directory:' && pwd; echo 'Checking classpath accessibility:' && ls -l /github/workspace/lib/target/dependency/google-cloud-spanner-jdbc-2.30.1.jar; echo 'Java classpath test:' && java -cp \$(find /github/workspace/lib/target/dependency -name '*.jar' | tr '\n' ':') -version; echo 'Liquibase classpath test:' && liquibase --classpath=\$(find /github/workspace/lib/target/dependency -name '*.jar' | tr '\n' ':') --version; echo 'Driver availability test:' && liquibase --classpath=\$(find /github/workspace/lib/target/dependency -name '*.jar' | tr '\n' ':') --driver=com.google.cloud.spanner.jdbc.JdbcDriver --url='jdbc:cloudspanner:/projects/dummy-project/instances/dummy-instance/databases/dummy-db' status --verbose || echo 'Driver test failed, check logs above'"
        shell: bash

      - name: Debug Liquibase Action
        run: |
          docker run --rm \
            -v "${{ github.workspace }}:/github/workspace" \
            --workdir /github/workspace \
            -e INPUT_CLASSPATH="$(find ${{ github.workspace }}/lib/target/dependency -name '*.jar' | tr '\n' ':')" \
            -e INPUT_CHANGELOGFILE="${{ env.CHANGE_LOG_FILE }}" \
            -e INPUT_URL="${{ env.JDBC_URL }}" \
            -e INPUT_DRIVER="com.google.cloud.spanner.jdbc.JdbcDriver" \
            -e INPUT_SEARCHPATH="${{ env.SEARCH_PATH }}" \
            -e INPUT_CONTEXTS="${{ inputs.app_env }}" \
            -e INPUT_LOGLEVEL="debug" \
            -e INPUT_INCLUDESYSTEMCLASSPATH="false" \
            liquibase/liquibase:4.32.0 \
            bash -c "echo 'Effective command:'; liquibase --classpath=\$(find /github/workspace/lib/target/dependency -name '*.jar' | tr '\n' ':') --driver=com.google.cloud.spanner.jdbc.JdbcDriver --url='${{ env.JDBC_URL }}' --searchPath=${{ env.SEARCH_PATH }} --changelogFile=${{ env.CHANGE_LOG_FILE }} --contexts='${{ inputs.app_env }}' --logLevel=debug --includeSystemClasspath=false status --verbose"
        shell: bash

      - name: Run Liquibase Status
        id: liquibase_status
        uses: liquibase-github-actions/status@v4.32.0
        with:
          changelogFile: ${{ env.CHANGE_LOG_FILE }}
          url: "${{ env.JDBC_URL }}"
          driver: com.google.cloud.spanner.jdbc.JdbcDriver
          searchPath: "${{ env.SEARCH_PATH }}"
          classpath: "$(find ${{ github.workspace }}/lib/target/dependency -name '*.jar' | tr '\n' ':')"
          contexts: ${{ inputs.app_env }}
          logLevel: debug
          includeSystemClasspath: false
        env:
          JAVA_HOME: ""

      - name: Run Liquibase Status Manually
        if: failure()
        run: |
          curl -L https://github.com/liquibase/liquibase/releases/download/v4.32.0/liquibase-4.32.0.tar.gz | tar -xz -C /tmp
          export PATH=/tmp:$PATH
          CLASSPATH=$(find ${{ github.workspace }}/lib/target/dependency -name '*.jar' | tr '\n' ':')
          liquibase \
            --changelogFile="${{ env.CHANGE_LOG_FILE }}" \
            --url="${{ env.JDBC_URL }}" \
            --driver=com.google.cloud.spanner.jdbc.JdbcDriver \
            --searchPath="${{ env.SEARCH_PATH }}" \
            --classpath="$CLASSPATH" \
            --contexts="${{ inputs.app_env }}" \
            --logLevel=debug \
            --includeSystemClasspath=false \
            status --verbose > mojojojo.log
          cat mojojojo.log
        shell: bash

      - name: Output Results
        if: always()
        run: |
          echo "Changesets:"
          echo "${{ steps.liquibase_status.outputs.output }}"
          if [ -f liquibase.log ]; then
            echo "Liquibase Log:"
            cat liquibase.log
          fi
          if [ -f mojojojo.log ]; then
            echo "Manual Liquibase Log:"
            cat mojojojo.log
          fi
        shell: bash